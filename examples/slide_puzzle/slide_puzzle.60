/* LICENSE BEGIN
    This file is part of the SixtyFPS Project -- https://sixtyfps.io
    Copyright (c) 2020 Olivier Goffart <olivier.goffart@sixtyfps.io>
    Copyright (c) 2020 Simon Hausmann <simon.hausmann@sixtyfps.io>

    SPDX-License-Identifier: GPL-3.0-only
    This file is also available under commercial licensing terms.
    Please contact info@sixtyfps.io for more information.
LICENSE END */

struct Piece := {
    // col/row position of the tile in the puzzle
    pos_x: int,
    pos_y: int,
    // offset in pixel from the base position for the kicking animation
    offset_x: length,
    offset_y: length,
}

struct Theme := {
    name: string,
    window-background-color: brush,
    game-background-color: brush,
    game-use-background-image: bool,
    game-border: length,
    game-radius: length,
    game-text-color: color,
    game-highlight-color: color,
    piece-border: length,
    piece-background-1: brush,
    piece-background-2: brush,
    piece-border-color-1: brush,
    piece-border-color-2: brush,
    piece-text-color-1: color,
    piece-text-color-2: color,
    piece-text-weight-incorrect-pos: int,
    piece-text-weight-correct-pos: int,
    piece-text-font-family: string,
    piece-radius: length,
    /// Ratio of the piece size
    piece-spacing: float,
}



Checkbox := Rectangle {
    property <bool> checked;
    callback toggled(bool);
    property<color> checked_color;
    property<color> unchecked_color;

    hover_rect := Rectangle {
        background: #f5f5f5;
        x: - parent.width / 4;
        y: - parent.height / 4;
        width: ta.has_hover ? root.width * 1.5 : 0px;
        height: self.width;
        border-radius: width;
    }

    checkbox_rect := Rectangle {
        border-width: height * 10%;
        border-color: unchecked_color;
        border-radius: 2px;

        clip := Rectangle {
            width: 0px;
            clip: true;

            Text {
                width: root.width;
                height: root.height;

                text: "âœ“";
                font-size: height;
                color: white;
                animate color { duration: 200ms; }
                vertical-alignment: center;
                horizontal-alignment: center;
                ta := TouchArea {
                    clicked => {
                        checked = !checked;
                        root.toggled(checked);
                    }
                }
            }
        }

    }

    states [
       /* pressed when ta.pressed : {
            clip.width: root.width;
            root.border-color: checked_color;
            root.border-width: root.width;
        }*/
        checked when root.checked : {
            clip.width: root.width;
            checkbox_rect.border-color: checked_color;
            checkbox_rect.border-width: root.width;
        }
    ]
    transitions [
        in checked : {
            animate clip.width { duration: 200ms; easing: ease-in; }
            animate checkbox_rect.border-width { duration: 100ms; easing: ease-out; }
        }
        out checked : {
            animate clip.width { duration: 100ms; easing: ease; }
            animate checkbox_rect.border-width { duration: 200ms; easing: ease-in-out; }
            animate checkbox_rect.border-color { duration: 200ms; easing: cubic-bezier(1,1,1,0); }
        }

    ]
}

import "./plaster-font/Plaster-Regular.ttf";

export MainWindow := Window {
    title: "Slide Puzzle - SixtyFPS Demo";

    callback piece_clicked(int);
    callback reset();
    callback enable_auto_mode(bool);
    property <bool> auto_play;
    property <int> moves;
    property <int> tiles-left;
    property <[Piece]> pieces: [
        { pos_x: 0, pos_y: 0 },
        { pos_x: 0, pos_y: 1 },
        { pos_x: 0, pos_y: 2 },
        { pos_x: 0, pos_y: 3 },
        { pos_x: 1, pos_y: 0 },
        { pos_x: 1, pos_y: 1 },
        { pos_x: 1, pos_y: 2 },
        { pos_x: 1, pos_y: 3 },
        { pos_x: 2, pos_y: 0 },
        { pos_x: 2, pos_y: 1 },
        { pos_x: 2, pos_y: 2 },
        { pos_x: 2, pos_y: 3 },
        { pos_x: 3, pos_y: 0 },
        { pos_x: 3, pos_y: 1 },
        { pos_x: 3, pos_y: 2 },
    ];

    property <[Theme]> themes: [
        {
            name: "SIMPLE",
            window-background-color: #ffffff,
            game-background-color: #ffffff,
            game-use-background-image: false,
            game-border: 1px,
            game-radius: 2px,
            game-text-color: #858585,
            game-highlight-color: #1d6aaa,
            piece-border: 1px,
            piece-background-1: #0d579b,
            piece-background-2: #0d579b,
            piece-border-color-1: #0a457b,
            piece-border-color-2: #0a457b,
            piece-text-color-1: #ffffff,
            piece-text-color-2: #ffffff,
            piece-text-weight-incorrect-pos: 400,
            piece-text-weight-correct-pos: 700,
            piece-radius: 5px,
            /// Ratio of the piece size
            piece-spacing: 10%,
        },
        {
            name: "BERLIN",
            window-background-color: #ffffff88,
            game-background-color: #ffffffcc,
            game-use-background-image: true,
            game-border: 0px,
            game-radius: 2px,
            game-text-color: #858585,
            game-highlight-color: #1d6aaa,
            piece-border: 0px,
            piece-background-1: #43689e,
            piece-background-2: #2f2a14,
            piece-border-color-1: #0000,
            piece-border-color-2: #0000,
            piece-text-color-1: #000000,
            piece-text-color-2: #ffffff,
            piece-text-weight-incorrect-pos: 700,
            piece-text-weight-correct-pos: 700,
            piece-radius: 0px,
            /// Ratio of the piece size
            piece-spacing: 8%,
        },
        {
            name: "PLASTER",
            window-background-color: #424244,
            game-background-color: #f8f4e9,
            game-use-background-image: false,
            game-border: 5px,
            game-radius: 20px,
            game-text-color: #858585,
            game-highlight-color: #e06b53,
            piece-border: 4px,
            piece-background-1: #e06b53,
            piece-background-2: #f8f4e9,
            piece-border-color-1: #424244,
            piece-border-color-2: #e06b53,
            piece-text-color-1: #f8f4e9,
            piece-text-color-2: #424244,
            piece-text-weight-incorrect-pos: 700,
            piece-text-weight-correct-pos: 700,
            piece-text-font-family: "Plaster",
            piece-radius: 5px,
            /// Ratio of the piece size
            piece-spacing: 10%,
        },
    ];

    property<int> current-theme-index;

    // FIXME: themes[current-theme-index]
    property <Theme> current-theme: {
            name: "SIMPLE",
            window-background-color: #ffffff,
            game-background-color: #ffffff,
            game-border: 1px,
            game-radius: 2px,
            game-text-color: #858585,
            game-highlight-color: #1d6aaa,
            piece-border: 1px,
            piece-background-1: #0d579b,
            piece-background-2: #0d579b,
            piece-border-color-1: #0a457b,
            piece-border-color-2: #0a457b,
            piece-text-color-1: #ffffff,
            piece-text-color-2: #ffffff,
            piece-text-weight-incorrect-pos: 400,
            piece-text-weight-correct-pos: 700,
            piece-radius: 5px,
            /// Ratio of the piece size
            piece-spacing: 10%,
    };

    property<length> pieces_size: min(width, height) / 6;
    property<length> pieces_spacing: current-theme.game-use-background-image && tiles-left == 0 ?
        2px : (pieces_size * current-theme.piece-spacing);

    animate pieces_spacing { duration: 500ms; easing: ease-out; }

    Image {
        height: 100%; width: 100%;
        // https://commons.wikimedia.org/wiki/File:Berlin_potsdamer_platz.jpg Belappetit, CC BY-SA 3.0
        source: @image-url("berlin.jpg");
        image-fit: cover;
    }

    Rectangle {
        background: current-theme.window-background-color;
        animate background { duration: 500ms; easing: ease-out; }
    }

    Rectangle {
        background: current-theme.game-background-color;
        border-color: current-theme.game-text-color;
        border-width: current-theme.game-border;
        border-radius: current-theme.game-radius;
        width: pieces_size * 4.6;
        height: pieces_size * 5.4;
        x: (parent.width - width)/2;
        y: (parent.height - height)/2;
        animate background, border-color, border-width, border-radius { duration: 500ms; easing: ease-out; }

        Rectangle {
            width: parent.width * 90%;
            height: pieces_size/2;
            x: (parent.width - width) / 2;
            HorizontalLayout {
                spacing: 0px;
                for theme[idx] in themes: TouchArea {
                    t := Text {
                        width: 100%; height: 100%;
                        text: theme.name;
                        color: idx == current-theme-index ? current-theme.game-highlight-color : current-theme.game-text-color;
                        vertical-alignment: center;
                        horizontal-alignment: center;
                    }
                    Rectangle {
                        background: t.color;
                        height: idx == current-theme-index ? 2px: 1px;
                        y: parent.height - height;
                    }
                    clicked => {
                        root.current-theme = theme;
                        root.current-theme-index = idx;
                    }
                }
            }
        }


        for p[i] in pieces : Rectangle {
            x: py * (pieces_size + pieces_spacing) + p.offset_x
                + (parent.width - (4*pieces_size + 3*pieces_spacing))/2;
            y: px * (pieces_size + pieces_spacing) + p.offset_y
                + (parent.height - (4*pieces_size + 3*pieces_spacing))/2;
            width: pieces_size;
            height: pieces_size;
            property <bool> is_correct: i == p.pos_x * 4 + p.pos_y;

            drop-shadow-offset-x: 1px;
            drop-shadow-offset-y: 1px;
            drop-shadow-blur: 6;
            drop-shadow-color: #00000080;
            border-radius: current-theme.piece-radius;
            clip: true;

            property<float> px: p.pos_x;
            property<float> py: p.pos_y;
            animate px , py { duration: 170ms; easing: cubic-bezier(0.17,0.76,0.4,1.75); }

            if (current-theme.game-use-background-image) : Image {
                height: 100%; width: 100%;
                // https://commons.wikimedia.org/wiki/File:Berlin_potsdamer_platz.jpg Belappetit, CC BY-SA 3.0
                source: @image-url("berlin.jpg");
                source-clip-x: mod(i, 4) * 1024 / 4;
                source-clip-y: floor(i / 4) * 683 / 4;
                source-clip-width: 1024 / 4;
                source-clip-height: 683 / 4;

                if (root.tiles-left != 0) : Rectangle {
                    width: 60%;
                    height: 60%;
                    x: (parent.width - width) / 2;
                    y: (parent.height - height) / 2;
                    border-radius: width;
                    background: is_correct ? #0008 : #fff8;
                }
            }

            if (!current-theme.game-use-background-image) : Rectangle {
                background: i >= 8 ? current-theme.piece-background-2 : current-theme.piece-background-1;
                border-color: i >= 8 ? current-theme.piece-border-color-2 : current-theme.piece-border-color-1;
                border-width: current-theme.piece-border;
                border-radius: current-theme.piece-radius;
                animate border-width, border-radius { duration: 500ms; easing: ease-out; }
            }

            if (!current-theme.game-use-background-image || tiles-left > 0) : Text {
                text: i+1;
                color: ((!current-theme.game-use-background-image && i >= 8) || (current-theme.game-use-background-image && is_correct)) ? current-theme.piece-text-color-2 : current-theme.piece-text-color-1;
                font-size: pieces_size / 3;
                font-weight: is_correct ? current-theme.piece-text-weight-correct-pos : current-theme.piece-text-weight-incorrect-pos;
                font-family: current-theme.piece-text-font-family;
                vertical-alignment: center;
                horizontal-alignment: center;
                width: 100%;
                height: 100%;
            }

            touch := TouchArea {
                clicked => { root.piece_clicked(i); }
            }

            shadow := Rectangle {
                circle := Rectangle {
                    height: width;
                    border-radius: width/2;
                    background: #0002;
                    x: touch.pressed_x - width/2;
                    y: touch.pressed_y - width/2;
                }
            }

            states [
                pressed when touch.pressed : {
                    shadow.color: #0002;
                    circle.width: shadow.width * 2 * 1.4142;
                }
                hover when touch.has_hover: {
                    shadow.color: #0000000d;
                }

            ]
            transitions [
                in pressed : {
                    animate shadow.color { duration: 50ms; }
                    animate circle.width { duration: 2s; easing: ease-out; }
                }
                out pressed : {
                    animate shadow.color { duration: 50ms; }
                }
            ]
        }

        if (root.tiles-left == 0) : Text {
            width: pieces_size;
            height: pieces_size;
            x: 3 * (pieces_size + pieces_spacing)
                + (parent.width - (4*pieces_size + 3*pieces_spacing))/2;
            y: 3 * (pieces_size + pieces_spacing)
                + (parent.height - (4*pieces_size + 3*pieces_spacing))/2;

            color: current-theme.game-highlight-color;
            font-size: pieces_size / 2;
            vertical-alignment: center;
            horizontal-alignment: center;
            text: "ðŸ–’";

            if (current-theme.game-use-background-image) : Image {
                height: 100%; width: 100%;
                // https://commons.wikimedia.org/wiki/File:Berlin_potsdamer_platz.jpg Belappetit, CC BY-SA 3.0
                source: @image-url("berlin.jpg");
                source-clip-x: 3 * 1024 / 4;
                source-clip-y: 3 * 683 / 4;
                source-clip-width: 1024 / 4;
                source-clip-height: 683 / 4;
            }
        }

        Rectangle {
            width: parent.width;
            height: 1px;
            background: current-theme.game-text-color;
            y: parent.height - pieces_size / 2;
        }

        HorizontalLayout {
            height: pieces_size / 2;
            y: parent.height - pieces_size / 2;
            width: parent.width;
            padding: height * 25%;
            Text {
                text: " â†» ";
                font-size: parent.height * 50%;
                color: current-theme.game-highlight-color;
                vertical-alignment: center;
                TouchArea {
                    clicked => { root.reset(); }
                }
            }
            Checkbox {
                width: parent.height - 2 * parent.padding;
                checked <=> auto_play;
                toggled(checked) => { root.enable_auto_mode(checked) }
                checked_color: current-theme.game-highlight-color;
                unchecked_color: current-theme.game-text-color;
            }
            Rectangle {} // stretch
            Text {
                text: root.moves;
                color: current-theme.game-highlight-color;
                vertical-alignment: center;
            }
            Text {
                text: "Moves ";
                color: current-theme.game-text-color;
                vertical-alignment: center;
            }
            Text {
                text: root.tiles-left;
                color: current-theme.game-highlight-color;
                vertical-alignment: center;
            }
            Text {
                text: "Tiles left";
                color: current-theme.game-text-color;
                vertical-alignment: center;
            }
        }
    }
}