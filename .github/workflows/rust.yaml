name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    env:
      LD_LIBRARY_PATH: ../Qt/lib

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}    
    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
    - name: XXX
      run: ls ../Qt; echo $LD_LIBRARY_PATH; echo $PATH;
    - name: Cache cargo index
      uses: actions/cache@v2
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}
    - name: Cache cargo build
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}
    - name: Install latest stable
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          target: wasm32-unknown-unknown
    - name: Build
      uses: actions-rs/cargo@v1
      with:
          command: build
          args: --verbose --all-features
    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
          command: fmt
          args: -- --check
    - name: WASM Build
      uses: actions-rs/cargo@v1
      with:
          command: build
          args: --target wasm32-unknown-unknown --verbose -p rustwasmtest
    - name: Prepare cmake module
      run: cargo xtask cmake --prefix $HOME/sixtyfps_install --install
    - name: C++ Test
      uses: lukka/run-cmake@v2.4
      with:
        cmakeListsTxtPath: examples/cpptest/CMakeLists.txt
